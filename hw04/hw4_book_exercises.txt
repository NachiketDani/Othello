Prepared by: Nachiket Dani

1. In Listing 5.4 (addnonnegatives.py) could the condition of the if statement have used > instead of >= and achieved the same results? Why?
Answer: Yes; changing the >= to > in the if loop does not change the result.
The program will continue and will not add 0 to the sum.

2. In Listing 5.4 (addnonnegatives.py) could the condition of the while statement have used > instead of >= and achieved the same results? Why?
Answer: Yes changing >= to > for the while loop does not yield same results.
The while loop will never initiate since the starting value for entry is being considered 0.

3. In Listing 5.4 (addnonnegatives.py) what would happen if the statement 
entry = int(input()) # Get the value ; were moved out of the loop? 
Is moving the assignment out of the loop a good or bad thing to do?Why?
Answer: If the statement were to be moved out of the loop, the user will only be able to enter a single value.
The while loop will go into an endless loop if the user enters a positive number and program will not produce the anticipated results.

4. How many asterisks does the following code fragment print?
a = 0
while a < 100:
print('*', end='')
a += 1
print()
Answer: The code prints 100 asterisks.


5. How many asterisks does the following code fragment print?
a = 0
while a < 100:
print('*', end='')
print()
Answer: The code prints out infinite asterisks. (endless loop since a is never incremented and always stays <100)

13. Provide the exact sequence of integers specified by each of the following range expressions
a) range(5)                   -> 0, 1, 2, 3, 4
b) range(5, 10)               -> 5, 6, 7, 8, 9
c) range(5, 20, 3)            -> 5, 8, 11, 14, 17
d) range(20, 5, -1)           -> 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6
e) range(20, 5, -3)           -> 20, 17, 14, 11, 8
f) range(10, 5)               -> Does not print as method/use not specified
g) range(0)                   -> Does not print as method/use not specified
h) range(10, 101, 10)         -> 10, 20, 30, 40, 50, 60, 70, 80, 90, 100
i) range(10, -1, -1)          -> 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0
j) range(-3, 4)               -> -3, -2, -1, 0, 1, 2, 3
k) range(0, 10, 1)            -> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9